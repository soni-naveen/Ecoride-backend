const mongoose = require("mongoose");

const userSchema = new mongoose.Schema({
  email: {
    type: String,
    required: true,
    trim: true,
  },
  password: {
    type: String,
    required: true,
  },
  additionalDetails: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "Profile",
  },
  token: {
    type: String,
  },
  resetPasswordExpires: {
    type: Date,
  },
  ridePublished: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "Ride",
  },
  rideBooked: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "BookedRide",
  },
});

const User = mongoose.model("User", userSchema);
module.exports = User;

// mongoose.Schema.Types.ObjectId is a data type in Mongoose, an ODM (Object Data Modeling) library for MongoDB and Node.js. It's used to define a schema path in Mongoose that represents a MongoDB ObjectId.

// In MongoDB, each document in a collection has a unique identifier called an ObjectId. This identifier is automatically generated by MongoDB and is used as the primary key for the document.

// The ref property specifies the name of the model that this ObjectId refers to, allowing Mongoose to automatically populate the referenced document when queried.
